// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName String?
  lastName String?

  email String @unique
  atToken String?
  hash String 
  hashedRT String?
  @@map("users")

  comments Comments[] @relation("UserComments")
}

model InfoSeries{
  SeriesName String @id 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  SeriesViewName String
  Description String
  Rate Int
  Status String
  Type String
  ReleaseYear String
  Genre String[]
  Studio String[]
  AmountOfEpisode Int
  VoiceActing String[]
  VideoSource String

  comments Comments[] @relation("SeriesComments")
}

model Comments{
  Id Int @id @default(autoincrement())
  SeriesName String 
  ParentId Int?
  UserId Int
  CommentText String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  series InfoSeries? @relation("SeriesComments",fields: [SeriesName],references: [SeriesName],onDelete: Cascade)
  parent Comments? @relation("CommentReplies",fields: [ParentId],references: [Id])
  replies Comments[] @relation("CommentReplies")
  user User? @relation("UserComments",fields: [UserId],references: [id],onDelete: Cascade)
}
